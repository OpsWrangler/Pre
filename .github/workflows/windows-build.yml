name: Windows Build

on:
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        type: string
        required: true

jobs:
  build:
    runs-on: windows-latest

    permissions:
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - name: Build for Windows
        shell: pwsh
        run: |
          python -m pip install -r requirements.txt
          Invoke-WebRequest https://github.com/upx/upx/releases/download/v4.2.4/upx-4.2.4-win64.zip -UseBasicParsing -OutFile upx.zip
          Expand-Archive -LiteralPath upx.zip
          Get-ChildItem -Recurse
          cp .\upx\upx-4.2.4-win64\upx.exe .
          pyinstaller --onefile .\main.py
          Get-ChildItem -Recurse

      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          # release_name: ${{ steps.version.outputs.version }}
          release_name: ${{ github.event.inputs.subdirectory }}
          tag_name: ${{ github.ref }}
          # body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: upload windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/main.exe
          asset_name: main.exe
          asset_content_type: application/exe

      # - name: Release
      #   uses: softprops/action-gh-release@v2
      #   # if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     name: "Current"
      #     files: ./dist/main.exe

      # - name: Create a Release
      #   uses: elgohr/Github-Release-Action@v5
      #   env:
      #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     title: MyReleaseMessage
      #     workdir: dist

