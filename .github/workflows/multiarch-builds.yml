name: MultiArchitecture Builds

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        type: string
        required: true
      prerelease_param:
        description: 'Is Prerelease?'
        type: boolean
        default: false

jobs:
  Create_Release:
    outputs:
      release_url: ${{ steps.create_release.outputs.upload_url }}
    runs-on: ubuntu-24.04
    steps:
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: ${{ github.event.inputs.prerelease_param }}
          release_name: Version ${{ github.event.inputs.version }}
          tag_name: ${{ github.event.inputs.version }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

  Build_Windows:
    needs: Create_Release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build for Windows
        shell: pwsh
        run: |
          md new
          copy main.py .\new\main_new.py
          py -3 -m pip install -r requirements.txt
          py -3 main.py templates --template_input_dirs .\new --template_vars 'pree_version = ${{ github.event.inputs.version }}'
          pyinstaller --onefile .\main_new.py

      - name: Upload Windows Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{needs.Create_Release.outputs.release_url}}
          asset_path: ./dist/main_new.exe
          asset_name: pree_windows_amd64.exe
          asset_content_type: application/exe

  Build_Linux:
    needs: Create_Release
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Build for Linux
        run: |
          ls /usr/bin/python*
          mkdir new
          cp main.py ./new/main_new.py
          python -m pip install -r requirements.txt
          python main.py templates --template_input_dirs ./new --template_vars 'pree_version = ${{ github.event.inputs.version }}'
          pyinstaller --onefile ./main_new.py

      - name: Upload Linux Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{needs.Create_Release.outputs.release_url}}
          asset_path: ./dist/main_new
          asset_name: pree_linux_amd64
          asset_content_type: application/vnd.debian.binary-package

      - name: Upload Source Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{needs.Create_Release.outputs.release_url}}
          asset_path: main_new.py
          asset_name: pree.py
          asset_content_type: text/plain


permissions:
  contents: write
